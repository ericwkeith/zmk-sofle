#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <1>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <60>;
    acceleration-exponent = <0>;
};

&mt {
    tapping-term-ms = <260>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <0>;
    quick-tap-ms = <0>;
    bindings = <&kp>, <&kp>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    macros {
        eracmail: eracmail {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp R &kp I &kp C &kp DOT &kp K &kp E &kp I &kp T &kp H &kp AT &kp E &kp H &kp I &kp DOT &kp C &kp O &kp M>;
            label = "ERACMAIL";
        };

        elemail: elemail {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp K &kp E &kp I &kp T &kp H &kp AT &kp E &kp L &kp E &kp M &kp E &kp N &kp T &kp C &kp O &kp R &kp P &kp DOT &kp C &kp O &kp M>;
            label = "ELEMAIL";
        };

        eid: eid {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp N4 &kp N8 &kp N9 &kp P &kp T &kp TAB>;
            label = "EID";
        };

        Rewrite: Rewrite {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp F &kp O &kp R &kp SPACE &kp R &kp E &kp W &kp R &kp I &kp T &kp E &kp SPACE &kp O &kp N &kp SPACE>;
            label = "REWRITE";
        };

        thisisstup: thisisstup {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp H &kp I &kp S &kp I &kp S &kp S &kp T &kp U &kp P &kp I &kp D &kp POUND &kp N3>;
            label = "THISISSTUP";
        };

        ccprefresh: ccprefresh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mkp LCLK &kp F5>;
            label = "CCPREFRESH";
        };

        pin: pin {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N9 &kp N0 &kp N9 &kp N7 &kp RET>;
            label = "PIN";
        };

        winlogin: winlogin {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp N4 &kp N8 &kp N9 &kp P &kp T &kp TAB &kp LS(T) &kp H &kp I &kp S &kp I &kp S &kp S &kp T &kp U &kp P &kp I &kp D &kp POUND &kp N3 &kp RET>;
            label = "winlogin";
        };
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        tobase {
            bindings = <&to 0>;
            key-positions = <39 56>;
            layers = <3 1 2 4 5>;
        };

        selectall {
            bindings = <&kp LC(A)>;
            key-positions = <27 26 28>;
            layers = <0 3 1 2>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <41 42>;
            layers = <0 3 1 2>;
        };

        undo {
            bindings = <&kp LC(Z)>;
            key-positions = <40 41>;
            layers = <0 3 1 2>;
        };

        Rewrite {
            bindings = <&Rewrite>;
            key-positions = <43 44>;
            layers = <0 3 1 2>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <42 43>;
            layers = <0 3 1 2>;
        };

        pageup {
            bindings = <&kp PAGE_UP>;
            key-positions = <17 15 16>;
            layers = <0 3 1 2>;
        };

        pagedown {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <43 41 42>;
            layers = <0 3 1 2>;
        };

        ccprefresh {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
            layers = <0 3 1 2>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <30 31>;
            layers = <0 3 1 2>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <30 27>;
            layers = <0 3 1 2>;
        };

        maclogin {
            bindings = <&pin>;
            key-positions = <12 25 11>;
            layers = <0 3 1 2 4 5>;
        };

        eid {
            bindings = <&eid>;
            key-positions = <53 54 55>;
            layers = <0 3 1 2>;
        };

        eracmail {
            bindings = <&eracmail>;
            key-positions = <0 1 13>;
            layers = <0 3 1 2>;
        };

        elemaail {
            bindings = <&elemail>;
            key-positions = <56 44 55>;
            layers = <0 3 1 2>;
        };

        slowmouse {
            bindings = <&to 2>;
            key-positions = <51 60>;
            layers = <0 3 1 2>;
        };

        workpass {
            bindings = <&thisisstup>;
            key-positions = <39 26 40>;
            layers = <0 3 1 2>;
        };

        retrorighthand {
            bindings = <&to 4>;
            key-positions = <0 12 56 60>;
            layers = <0>;
        };

        inverse {
            bindings = <&bt BT_CLR>;
            key-positions = <0 13 26 39>;
            layers = <0>;
        };

        minikeeb {
            bindings = <&to 5>;
            key-positions = <12 51 7 60>;
            layers = <0>;
        };

        winglogin {
            bindings = <&winlogin>;
            key-positions = <5 4 17 18>;
            layers = <0 3 2 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp ESCAPE        &kp NUMBER_1  &kp NUMBER_2        &kp NUMBER_3  &kp NUMBER_4  &kp N5      &mmv MOVE_Y(-500)  &kp NUMBER_6  &kp N7     &kp N8               &kp N9                    &kp N0         &kp BACKSPACE
&kp TAB           &kp Q         &kp W               &kp E         &kp R         &kp T       &mmv MOVE_Y(500)   &kp Y         &kp U      &kp I                &kp O                     &kp P          &kp BACKSLASH
&kp LEFT_SHIFT    &kp A         &lt 2 S             &kp D         &kp F         &kp G       &mmv MOVE_X(-500)  &kp H         &kp J      &kp K                &kp L                     &kp SEMICOLON  &kp SQT
&kp LEFT_CONTROL  &kp Z         &mt LEFT_CONTROL X  &kp C         &lt 3 V       &kp B       &mmv MOVE_X(500)   &kp N         &kp M      &mt RIGHT_GUI COMMA  &mt RIGHT_CONTROL PERIOD  &kp SLASH      &kp DOWN
&kp K_MUTE        &kp LEFT_GUI  &kp LEFT_ALT        &none         &lt 1 RET     &mkp MB1    &mkp MB1           &mkp MB2      &kp SPACE  &none                &none                     &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "base layer";
        };

        numpad {
            bindings = <
&none             &none          &none         &none         &none         &none         &kp K_NEXT        &none  &none           &none           &none      &none  &none
&kp TAB           &kp PLUS       &kp NUMBER_7  &kp N8        &kp NUMBER_9  &kp DELETE    &kp K_PREV        &none  &none           &kp UP_ARROW    &none      &none  &none
&kp LEFT_SHIFT    &kp BACKSPACE  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS     &mkp MB4          &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &none  &none
&kp LEFT_CONTROL  &kp BACKSLASH  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH     &mkp MB5          &none  &none           &none           &none      &none  &none
&none             &kp NUMBER_0   &kp PERIOD    &none         &none         &none         &kp K_PLAY_PAUSE  &none  &none           &none           &none      &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        slowmouse {
            bindings = <
&none        &none   &none   &none   &none   &none    &trans  &none  &none              &none              &none             &none   &none
&none        &none   &none   &none   &none   &none    &trans  &none  &msc SCRL_DOWN     &mmv MOVE_Y(-200)  &msc SCRL_UP      &none   &none
&none        &none   &none   &none   &none   &none    &trans  &none  &mmv MOVE_X(-200)  &mmv MOVE_Y(200)   &mmv MOVE_X(200)  &none   &none
&thisisstup  &none   &none   &none   &none   &none    &trans  &none  &none              &mkp MB3           &none             &none   &mkp MB2
&trans       &trans  &trans  &trans  &trans  &none    &trans  &none  &mkp MB1           &trans             &trans            &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        fastmouse {
            bindings = <
&none        &none   &none   &none   &none   &none    &trans  &none     &none           &none           &none            &none   &none
&none        &none   &none   &none   &none   &none    &trans  &none     &msc SCRL_DOWN  &mmv MOVE_UP    &msc SCRL_UP     &none   &none
&none        &none   &none   &none   &none   &none    &trans  &none     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none   &none
&thisisstup  &none   &none   &none   &none   &none    &trans  &none     &none           &mkp MB3        &none            &none   &mkp MB2
&trans       &trans  &trans  &trans  &trans  &none    &trans  &mkp MB2  &mkp MB1        &trans          &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        retrorighthand {
            bindings = <
&kp ESC           &kp N1      &kp N2  &kp N3  &kp N4     &kp N5    &mmv MOVE_UP     &kp N6  &kp N7  &kp N8  &kp N9             &kp N0  &kp BSPC
&kp TAB           &kp Q       &kp W   &kp E   &kp R      &kp T     &mmv MOVE_DOWN   &kp Q   &kp W   &kp E   &kp R              &kp T   &kp T
&kp LEFT_CONTROL  &kp A       &kp S   &kp D   &kp F      &kp G     &mmv MOVE_LEFT   &kp A   &kp S   &kp D   &kp F              &kp G   &kp RET
&kp LSHFT         &kp Z       &kp X   &kp C   &kp V      &kp B     &mmv MOVE_RIGHT  &kp Z   &kp X   &kp C   &kp V              &kp B   &kp RSHFT
&kp K_MUTE        &kp DELETE  &none   &none   &kp SPACE  &none     &mkp LCLK        &none   &kp J   &kp K   &kp RIGHT_BRACKET  &kp L
            >;
        };

        minikeeb {
            bindings = <
&none  &none  &none  &none  &none  &none    &kp UP_ARROW    &kp ESCAPE    &kp NUMBER_1      &kp NUMBER_2       &kp SPACE        &kp O    &kp L
&none  &none  &none  &none  &none  &none    &kp DOWN_ARROW  &kp TAB       &mkp MB1          &mmv MOVE_UP       &mkp MB2         &kp I    &kp K
&none  &none  &none  &none  &none  &none    &kp LEFT_ARROW  &kp NUMBER_3  &mmv MOVE_LEFT    &mmv MOVE_DOWN     &mmv MOVE_RIGHT  &kp U    &kp J
&none  &none  &none  &none  &none  &none    &kp RIGHT       &kp E         &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH    &kp Y    &kp H
&none  &none  &none  &none  &none  &none    &none           &none         &kp D             &kp F              &kp LEFT_SHIFT   &kp RET
            >;
        };
    };
};
