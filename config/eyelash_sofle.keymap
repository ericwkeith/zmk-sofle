#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <1>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <60>;
    acceleration-exponent = <0>;
};

&mt {
    tapping-term-ms = <260>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <0>;
    quick-tap-ms = <0>;
    bindings = <&kp>, <&kp>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    macros {
        eracmail: eracmail {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp R &kp I &kp C &kp DOT &kp K &kp E &kp I &kp T &kp H &kp AT &kp E &kp H &kp I &kp DOT &kp C &kp O &kp M &kp TAB>;
            label = "ERACMAIL";
        };

        elemail: elemail {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp K &kp E &kp I &kp T &kp H &kp AT &kp E &kp L &kp E &kp M &kp E &kp N &kp T &kp C &kp O &kp R &kp P &kp DOT &kp C &kp O &kp M &kp TAB>;
            label = "ELEMAIL";
        };

        eid: eid {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp N4 &kp N8 &kp N9 &kp P &kp T &kp TAB>;
            label = "EID";
        };

        Rewrite: Rewrite {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp F &kp O &kp R &kp SPACE &kp R &kp E &kp W &kp R &kp I &kp T &kp E &kp SPACE &kp O &kp N &kp SPACE>;
            label = "REWRITE";
        };

        thisisstup: thisisstup {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp H &kp I &kp S &kp I &kp S &kp S &kp T &kp U &kp P &kp I &kp D &kp POUND &kp N3>;
            label = "THISISSTUP";
        };
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        tobase {
            bindings = <&to 0>;
            key-positions = <31 30>;
            layers = <0 1 4 2 3 5>;
        };

        medmouse {
            bindings = <&to 2>;
            key-positions = <36 35>;
            layers = <0 1 4 2 3 5>;
        };

        selectall {
            bindings = <&kp LC(A)>;
            key-positions = <27 26>;
            layers = <0 1 4 2 3 5>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <41 42>;
            layers = <0 1 2 3 4 5>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <42 43>;
            layers = <0 1 2 3 4 5>;
        };

        undo {
            bindings = <&kp LC(Z)>;
            key-positions = <40 41>;
            layers = <0 2 1 3 4 5>;
        };

        Rewrite {
            bindings = <&Rewrite>;
            key-positions = <43 44>;
            layers = <0 1 4 2 3 5>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp ESCAPE      &kp NUMBER_1      &kp NUMBER_2    &kp NUMBER_3        &kp NUMBER_4    &kp N5     &kp UP_ARROW    &kp NUMBER_6  &kp N7          &kp N8                   &kp N9                &kp N0                 &kp BACKSPACE
&kp TAB         &kp Q             &kp W           &kp E               &kp R           &kp T      &kp DOWN_ARROW  &kp Y         &kp U           &kp I                    &kp O                 &kp P                  &kp BACKSLASH
&mo 4           &kp A             &kp S           &kp D               &kp F           &kp G      &kp LEFT_ARROW  &kp H         &kp J           &kp K                    &kp L                 &to 2                  &kp SQT
&kp LEFT_SHIFT  &mt LEFT_SHIFT Z  &mt LEFT_ALT X  &mt LEFT_CONTROL C  &mt LEFT_GUI V  &kp B      &kp RIGHT       &kp N         &mt LEFT_GUI M  &mt RIGHT_CONTROL COMMA  &mt RIGHT_ALT PERIOD  &mt RIGHT_SHIFT SLASH  &kp RET
&kp C_MUTE      &kp DELETE        &kp LEFT_GUI    &kp LEFT_CONTROL    &kp TAB         &kp RET    &kp RET         &kp RET       &kp SPACE       &kp SPACE                &kp SPACE             &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "base layer";
        };

        slowmouse {
            bindings = <
&trans  &trans  &trans             &trans             &trans            &trans      &trans  &trans     &trans   &trans            &trans           &trans  &trans
&trans  &none   &mkp MB2           &mmv MOVE_Y(-100)  &mkp MB3          &none       &trans  &kp HOME   &kp END  &msc MOVE_Y(-20)  &msc MOVE_Y(20)  &trans  &trans
&mo 4   &none   &mmv MOVE_X(-100)  &mmv MOVE_Y(100)   &mmv MOVE_X(100)  &none       &trans  &kp RC(C)  &to 1    &mkp MB1          &kp RC(V)        &to 2   &trans
&trans  &trans  &trans             &trans             &trans            &mkp MB4    &trans  &mkp MB5   &trans   &to 3             &trans           &trans  &trans
&trans  &trans  &trans             &to 0              &trans            &trans      &trans  &trans     &trans   &trans            &trans           &trans
            >;

            display-name = "mouse layer";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        midmouse {
            display-name = "mouse layer";
            bindings = <
&trans  &trans  &trans             &trans             &trans            &trans      &trans  &trans     &trans   &trans            &trans           &trans  &trans
&trans  &none   &mkp MB2           &mmv MOVE_Y(-300)  &mkp MB3          &none       &trans  &kp HOME   &kp END  &msc MOVE_Y(-20)  &msc MOVE_Y(20)  &trans  &trans
&mo 4   &none   &mmv MOVE_X(-300)  &mmv MOVE_Y(300)   &mmv MOVE_X(300)  &none       &trans  &kp RC(C)  &to 1    &mkp MB1          &kp RC(V)        &to 2   &trans
&trans  &trans  &trans             &trans             &trans            &mkp MB4    &trans  &mkp MB5   &trans   &to 3             &trans           &trans  &trans
&trans  &trans  &trans             &to 0              &trans            &trans      &trans  &trans     &trans   &trans            &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        fastmouse {
            display-name = "mouse layer";
            bindings = <
&trans  &trans  &trans             &trans             &trans            &trans      &trans  &trans     &trans   &trans            &trans           &trans  &trans
&trans  &none   &mkp MB2           &mmv MOVE_Y(-600)  &mkp MB3          &none       &trans  &kp HOME   &kp END  &msc MOVE_Y(-20)  &msc MOVE_Y(20)  &trans  &trans
&mo 4   &none   &mmv MOVE_X(-600)  &mmv MOVE_Y(600)   &mmv MOVE_X(600)  &none       &trans  &kp RC(C)  &to 1    &mkp MB1          &kp RC(V)        &to 2   &trans
&trans  &trans  &trans             &trans             &trans            &mkp MB4    &trans  &mkp MB5   &trans   &to 3             &trans           &trans  &trans
&trans  &trans  &trans             &to 0              &trans            &trans      &trans  &trans     &trans   &trans            &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        numfunctions {
            bindings = <
&none   &none        &none         &none         &none         &none        &trans  &none         &none         &none         &none         &none       &trans
&none   &none        &kp NUMBER_7  &kp N8        &kp NUMBER_9  &kp MINUS    &trans  &kp MINUS     &kp N7        &kp N8        &kp N9        &none       &none
&none   &thisisstup  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp SLASH    &trans  &kp SLASH     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &none       &none
&trans  &kp EQUAL    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS     &trans  &none         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH   &kp RET
&trans  &kp DELETE   &kp PERIOD    &kp N0        &kp TAB       &kp RET      &trans  &kp NUMBER_0  &kp NUMBER_0  &kp N0        &kp PERIOD    &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        numbersym {
            bindings = <
&trans  &trans        &trans        &trans        &trans        &trans          &trans  &trans        &trans        &trans        &trans        &trans        &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans  &trans        &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &trans  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans
&trans  &kp NUMBER_6  &kp N7        &kp N8        &kp N9        &kp N0          &trans  &trans        &trans        &trans        &trans        &trans        &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans  &trans        &trans        &trans        &trans        &trans
            >;
        };
    };
};
